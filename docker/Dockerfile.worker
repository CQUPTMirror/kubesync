# Build the manager binary
FROM --platform=$BUILDPLATFORM golang:1.21 as builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY worker/ worker/
COPY api/ api/
COPY internal/types.go internal/types.go

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o main worker/cmd/main.go

FROM --platform=$TARGETPLATFORM debian:12-slim
RUN apt update && apt install -y --no-install-recommends rsync ca-certificates python3-requests && rm -rf /var/lib/apt/lists/*
COPY --from=builder /workspace/main /usr/bin
COPY worker/utils/reporter /usr/bin/reporter
RUN chmod +x /usr/bin/reporter

ENTRYPOINT ["/usr/bin/main"]
