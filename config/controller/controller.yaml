apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: namespace
    app.kubernetes.io/created-by: kubesync
    app.kubernetes.io/part-of: kubesync
    app.kubernetes.io/managed-by: kustomize
  name: kubesync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: kubesync
  labels:
    app: controller
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller
    app.kubernetes.io/created-by: kubesync
    app.kubernetes.io/part-of: kubesync
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      app: controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        app: controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      securityContext:
        runAsNonRoot: true
      containers:
      - name: controller
        image: ghcr.io/cquptmirror/controller:dev
        imagePullPolicy: Always
        env: []  # all environments are optional
#        - name: MANAGER_IMAGE
#          value: ghcr.io/cquptmirror/manager:dev  # Default image used to deploy manager
#        - name: WORKER_IMAGE
#          value: ghcr.io/cquptmirror/worker:dev  # Default image used to deploy worker
#        - name: PULL_POLICY
#          value: Always  # Default imagePullPolicy used to deploy all type of containers
#        - name: PULL_SECRET
#          value:  # Default imagePullSecret used to deploy all type of containers
#        - name: STORAGE_CLASS
#          value:  # Default storageClass of worker pvc
#        - name: ACCESS_MODE
#          value: ReadWriteOnce  # Default accessMode of worker pvc
#        - name: FRONT_IMAGE  # Default image used to deploy the directory service
#          value: nginx / caddy
#        - name: RSYNC_IMAGE  # Default image used to deploy the rsync service
#          value: rsync
#        - name: FRONT_CMD  # Default command used to deploy the directory service
#          value: caddy file-server --browse
#        - name: RSYNC_CMD  # Default command used to deploy the rsync service
#          value: rsync
#        - name: FRONT_HOST  # Default domain used to deploy front services (api, directory)
#          value: mirrors.cqupt.edu.cn
#        - name: FRONT_TLS  # Default TLS secret used to deploy front services (api, directory)
#          value: mirrors-tls
#        - name: FRONT_CLASS  # Default ingress class used to deploy front services (api, directory)
#          value: traefik
#        - name: FRONT_ANN  # Default ingress annotations used to deploy front services (api, directory), split by ';'
#          value: "traefik.ingress.kubernetes.io/router.entrypoints: http,https;traefik.ingress.kubernetes.io/router.middlewares: auth@file,default-prefix@kubernetescrd"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-sa
      terminationGracePeriodSeconds: 10
